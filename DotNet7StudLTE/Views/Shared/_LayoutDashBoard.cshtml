@using DotNet7StudLTE.BusLogic;
@using DotNet7StudLTE.Helpers;
@inject IHttpContextAccessor httpContextAccessor
@{
    Layout = "";
    var transMessage = TempData["TransMessage"];
    var transError = TempData["TransError"];

    int day1Male=0, day2Male=0, day3Male=0, day4Male=0, day5Male=0, day6Male=0, day7Male=0;
    int day1Female = 0, day2Female = 0, day3Female = 0, day4Female = 0, day5Female = 0, day6Female = 0, day7Female = 0;
    string mode = string.Empty;
    string modeStatus = string.Empty;
}

@{

    var UserID = httpContextAccessor.HttpContext.Session.GetString("UserID");
    var FullName = httpContextAccessor.HttpContext.Session.GetString("FullName");
    var Theme = httpContextAccessor.HttpContext.Session.GetString("Theme");
    if (string.IsNullOrWhiteSpace(FullName))
    {
        httpContextAccessor.HttpContext.Session.Clear();

        //redirect to login
        Context.Response.Redirect(Constants.DEFAULT_LOGIN);
    }

    //get attendance data
    var getAttendanceStudents = StudLogic.GetAttendanceStudentData();
    int[] data = new int[7];
    if (getAttendanceStudents.Tables.Count>0)
    {
        //get the attendance for male students
        var maleAttendance = getAttendanceStudents.Tables[0];
        var femaleAttendance = getAttendanceStudents.Tables[1];
        if (maleAttendance.Rows.Count>0)
        {
            day1Male = Convert.ToInt32(maleAttendance.Rows[0]["Total"]);
            day2Male = Convert.ToInt32(maleAttendance.Rows[1]["Total"]);
            day3Male = Convert.ToInt32(maleAttendance.Rows[2]["Total"]);
            day4Male = Convert.ToInt32(maleAttendance.Rows[3]["Total"]);
            day5Male = Convert.ToInt32(maleAttendance.Rows[4]["Total"]);
            day6Male = Convert.ToInt32(maleAttendance.Rows[5]["Total"]);
            day7Male = Convert.ToInt32(maleAttendance.Rows[6]["Total"]);
        }
        if (femaleAttendance.Rows.Count > 0)
        {
            day1Female = Convert.ToInt32(femaleAttendance.Rows[0]["Total"]);
            day2Female = Convert.ToInt32(femaleAttendance.Rows[1]["Total"]);
            day3Female = Convert.ToInt32(femaleAttendance.Rows[2]["Total"]);
            day4Female = Convert.ToInt32(femaleAttendance.Rows[3]["Total"]);
            day5Female = Convert.ToInt32(femaleAttendance.Rows[4]["Total"]);
            day6Female = Convert.ToInt32(femaleAttendance.Rows[5]["Total"]);
            day7Female = Convert.ToInt32(femaleAttendance.Rows[6]["Total"]);
        }

    }
    else
    {
       ErrHandler.WriteLog("Attendance data cannot be fetched at the moment", "ERROR");
    }

}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Inventory Management | Dashboard</title>
    @Html.Partial("_BasicStyles")
</head>
<body class="hold-transition dark-mode sidebar-mini layout-fixed layout-navbar-fixed layout-footer-fixed">
    <div class="wrapper">

        <!-- Preloader -->
        <div class="preloader flex-column justify-content-center align-items-center">
            <img class="animation__wobble" src="~/dist/img/AdminLTELogo.png" alt="AdminLTELogo" height="60" width="60">
        </div>

        <!--Top Navigation -->
        @Html.Partial("_TopNavBar")

        <!--Left Navigation -->
        @Html.Partial("_AsideMenu")
        <input type="hidden" id="transMessage" value="@transMessage" />
        <input type="hidden" id="transError" value="@transError" />
        <!-- Content Wrapper. Contains page content -->
        <div class="content-wrapper">
            <!-- Main content -->
            <section class="content">
                <div class="container-fluid">
                    @RenderBody()
                </div><!--/. container-fluid -->
            </section>
            <!-- /.content -->
        </div>
        <!-- /.content-wrapper -->

        <!---Control Sidebar partial view--->
        @Html.Partial("_ControlSidebar")

        <!---Footer partial view--->
        @Html.Partial("_FooterPartial")

    </div>
    @Html.Partial("_BasicScripts")

    <script>
        $(document).ready(function () {
            
            var transMessage = $("#transMessage").val();
            var transError = $("#transError").val();

            if (transMessage) {
                toastr.success(transMessage);
            }
            else if (transError) {
                toastr.error(transError);
            }
        });
    </script>



    @{
        //bar graph data
        //var test1= "data: [1000, 2000, 3000, 2500, 2700, 2500, 3000]";
        //var test2 = "data: [200, 1700, 2700, 2000, 1800, 1500, 2000]";
        var test1 = "data: [" + day1Male.ToString() + ", " + day2Male.ToString() + ", " + day3Male.ToString() + ", " + day4Male.ToString() + ", " + day5Male.ToString() + ", " + day6Male.ToString() + ", " + day7Male.ToString() + "]";
        var test2 = "data: [" + day1Female.ToString() + ", " + day2Female.ToString() + ", " + day3Female.ToString() + ", " + day4Female.ToString() + ", " + day5Female.ToString() + ", " + day6Female.ToString() + ", " + day7Female.ToString() + "]";

        //line chart data
        //var test3 = "data: [100, 120, 170, 167, 180, 177, 160]";
        //var test4 = "data: [60, 80, 70, 67, 80, 77, 100]";
        var test3 = "data: [" + day1Male.ToString() + ", " + day2Male.ToString() + ", " + day3Male.ToString() + ", " + day4Male.ToString() + ", " + day5Male.ToString() + ", " + day6Male.ToString() + ", " + day7Male.ToString() + "]";
        var test4 = "data: [" + day1Female.ToString() + ", " + day2Female.ToString() + ", " + day3Female.ToString() + ", " + day4Female.ToString() + ", " + day5Female.ToString() + ", " + day6Female.ToString() + ", " + day7Female.ToString() + "]";

    }

    <script type="text/javascript">
        $(function () {
            'use strict'

            var ticksStyle = {
                fontColor: '#495057',
                fontStyle: 'bold'
            }

            var mode = 'index'
            var intersect = true



            var $salesChart = $('#sales-chart')
            // eslint-disable-next-line no-unused-vars
            var salesChart = new Chart($salesChart, {
                type: 'bar',
                data: {
                    labels: ['16', '17', '18', '19', '20', '21', '22'],
                    datasets: [
                        {
                            backgroundColor: '#007bff',
                            borderColor: '#007bff',
                            @test1
                        },
                        {
                            backgroundColor: '#ced4da',
                            borderColor: '#ced4da',
                            @test2
                        }
                    ]
                },
                options: {
                    maintainAspectRatio: false,
                    tooltips: {
                        mode: mode,
                        intersect: intersect
                    },
                    hover: {
                        mode: mode,
                        intersect: intersect
                    },
                    legend: {
                        display: false
                    },
                    scales: {
                        yAxes: [{
                            // display: false,
                            gridLines: {
                                display: true,
                                lineWidth: '4px',
                                color: 'rgba(0, 0, 0, .2)',
                                zeroLineColor: 'transparent'
                            },
                            ticks: $.extend({
                                beginAtZero: true,

                                // Include a dollar sign in the ticks
                                //callback: function (value) {
                                //    if (value >= 1000) {
                                //        value /= 1000
                                //        value += 'k'
                                //    }

                                //    return '$' + value
                                //}
                            }, ticksStyle)
                        }],
                        xAxes: [{
                            display: true,
                            gridLines: {
                                display: false
                            },
                            ticks: ticksStyle
                        }]
                    }
                }
            })

            var $visitorsChart = $('#visitors-chart')
            // eslint-disable-next-line no-unused-vars
            var visitorsChart = new Chart($visitorsChart, {
                data: {
                    labels: ['16', '17', '18', '19', '20', '21', '22'],
                    datasets: [{
                        type: 'line',
                        @test3,
                        backgroundColor: 'transparent',
                        borderColor: '#007bff',
                        pointBorderColor: '#007bff',
                        pointBackgroundColor: '#007bff',
                        fill: false
                        // pointHoverBackgroundColor: '#007bff',
                        // pointHoverBorderColor    : '#007bff'
                    },
                    {
                        type: 'line',
                        @test4,
                        backgroundColor: 'tansparent',
                        borderColor: '#ced4da',
                        pointBorderColor: '#ced4da',
                        pointBackgroundColor: '#ced4da',
                        fill: false
                        // pointHoverBackgroundColor: '#ced4da',
                        // pointHoverBorderColor    : '#ced4da'
                    }]
                },
                options: {
                    maintainAspectRatio: false,
                    tooltips: {
                        mode: mode,
                        intersect: intersect
                    },
                    hover: {
                        mode: mode,
                        intersect: intersect
                    },
                    legend: {
                        display: false
                    },
                    scales: {
                        yAxes: [{
                            // display: false,
                            gridLines: {
                                display: true,
                                lineWidth: '4px',
                                color: 'rgba(0, 0, 0, .2)',
                                zeroLineColor: 'transparent'
                            },
                            ticks: $.extend({
                                beginAtZero: true,
                                suggestedMax: 50
                            }, ticksStyle)
                        }],
                        xAxes: [{
                            display: true,
                            gridLines: {
                                display: false
                            },
                            ticks: ticksStyle
                        }]
                    }
                }
            })
        })

    </script>



    <script type="text/javascript">
        (function ($) {
            'use strict'

            function capitalizeFirstLetter(string) {
                return string.charAt(0).toUpperCase() + string.slice(1)
            }

            function createSkinBlock(colors, callback, noneSelected) {
                var $block = $('<select />', {
                    class: noneSelected ? 'custom-select mb-3 border-0' : 'custom-select mb-3 text-light border-0 ' + colors[0].replace(/accent-|navbar-/, 'bg-')
                })

                if (noneSelected) {
                    var $default = $('<option />', {
                        text: 'None Selected'
                    })

                    $block.append($default)
                }

                colors.forEach(function (color) {
                    var $color = $('<option />', {
                        class: (typeof color === 'object' ? color.join(' ') : color).replace('navbar-', 'bg-').replace('accent-', 'bg-'),
                        text: capitalizeFirstLetter((typeof color === 'object' ? color.join(' ') : color).replace(/navbar-|accent-|bg-/, '').replace('-', ' '))
                    })

                    $block.append($color)
                })
                if (callback) {
                    $block.on('change', callback)
                }

                return $block
            }

            var $sidebar = $('.control-sidebar')
            var $container = $('<div />', {
                class: 'p-3 control-sidebar-content'
            })

            $sidebar.append($container)

            // Checkboxes
            
            @{
                if (Theme == "False")
                {
                modeStatus = "false";
                }
                else
                {
                modeStatus = "true";
                }
            }
          
            $container.append(
                '<h5>Customize Appearance</h5><hr class="mb-2"/>'
            )
            var $dark_mode_checkbox = $('<input />', {
                type: 'checkbox',
                value: 1,
                checked: $('body').removeClass('dark-mode'),
                checked: @modeStatus,
                class: 'mr-1'
            }).on('click', function () {
                if ($(this).is(':checked')) {
                    $('body').addClass('dark-mode')
                    @{
                        var devdarkMode = StudLogic.UpdateUserDarkTheme(Convert.ToInt32(UserID));
                        if (devdarkMode==1)
                        {
                
                        }
                    }
                } else {
                    $('body').removeClass('dark-mode')
                    @{
                        var delightMode = StudLogic.UpdateUserTheme(Convert.ToInt32(UserID));
                        if (delightMode == 1)
                        {

                        }
                    }
                }
                
            })
            
            var $dark_mode_container = $('<div />', { class: 'mb-4' }).append($dark_mode_checkbox).append('<span>Dark Mode</span>')
            $container.append($dark_mode_container)

            // Color Arrays

            var navbar_dark_skins = [
                'navbar-primary',
                'navbar-secondary',
                'navbar-info',
                'navbar-success',
                'navbar-danger',
                'navbar-indigo',
                'navbar-purple',
                'navbar-pink',
                'navbar-navy',
                'navbar-lightblue',
                'navbar-teal',
                'navbar-cyan',
                'navbar-dark',
                'navbar-gray-dark',
                'navbar-gray'
            ]

            var navbar_light_skins = [
                'navbar-light',
                'navbar-warning',
                'navbar-white',
                'navbar-orange'
            ]

            var sidebar_colors = [
                'bg-primary',
                'bg-warning',
                'bg-info',
                'bg-danger',
                'bg-success',
                'bg-indigo',
                'bg-lightblue',
                'bg-navy',
                'bg-purple',
                'bg-fuchsia',
                'bg-pink',
                'bg-maroon',
                'bg-orange',
                'bg-lime',
                'bg-teal',
                'bg-olive'
            ]

            var accent_colors = [
                'accent-primary',
                'accent-warning',
                'accent-info',
                'accent-danger',
                'accent-success',
                'accent-indigo',
                'accent-lightblue',
                'accent-navy',
                'accent-purple',
                'accent-fuchsia',
                'accent-pink',
                'accent-maroon',
                'accent-orange',
                'accent-lime',
                'accent-teal',
                'accent-olive'
            ]

            var sidebar_skins = [
                'sidebar-dark-primary',
                'sidebar-dark-warning',
                'sidebar-dark-info',
                'sidebar-dark-danger',
                'sidebar-dark-success',
                'sidebar-dark-indigo',
                'sidebar-dark-lightblue',
                'sidebar-dark-navy',
                'sidebar-dark-purple',
                'sidebar-dark-fuchsia',
                'sidebar-dark-pink',
                'sidebar-dark-maroon',
                'sidebar-dark-orange',
                'sidebar-dark-lime',
                'sidebar-dark-teal',
                'sidebar-dark-olive',
                'sidebar-light-primary',
                'sidebar-light-warning',
                'sidebar-light-info',
                'sidebar-light-danger',
                'sidebar-light-success',
                'sidebar-light-indigo',
                'sidebar-light-lightblue',
                'sidebar-light-navy',
                'sidebar-light-purple',
                'sidebar-light-fuchsia',
                'sidebar-light-pink',
                'sidebar-light-maroon',
                'sidebar-light-orange',
                'sidebar-light-lime',
                'sidebar-light-teal',
                'sidebar-light-olive'
            ]
        })(jQuery)

    </script>
</body>
</html>
